#pragma once

#include "gbhw_cpu.h"

namespace gbhw
{
	GBInline void SetupInstructions(Instruction* instructions)
	{
		instructions[ 0x0].Set( 0x0,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "NOP");
		instructions[ 0x1].Set( 0x1,  0x0, 3, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::BC,     RTD::Imm16 , "LD BC,d16");
		instructions[ 0x2].Set( 0x2,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrBC, RTD::A     , "LD (BC),A");
		instructions[ 0x3].Set( 0x3,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::BC,     RTD::None  , "INC BC");
		instructions[ 0x4].Set( 0x4,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::B,      RTD::None  , "INC B");
		instructions[ 0x5].Set( 0x5,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::B,      RTD::None  , "DEC B");
		instructions[ 0x6].Set( 0x6,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::Imm8  , "LD B,d8");
		instructions[ 0x7].Set( 0x7,  0x0, 1,  4,  0, RFB::Reset,       RFB::Reset,       RFB::Reset,       RFB::PerFunction , RTD::None,   RTD::None  , "RLCA");
		instructions[ 0x8].Set( 0x8,  0x0, 3, 20,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::Addr16, RTD::SP    , "LD a16,SP");
		instructions[ 0x9].Set( 0x9,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::HL,     RTD::BC    , "ADD HL,BC");
		instructions[ 0xa].Set( 0xa,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::AddrBC, "LD A,(BC)");
		instructions[ 0xb].Set( 0xb,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::BC,     RTD::None  , "DEC BC");
		instructions[ 0xc].Set( 0xc,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::C,      RTD::None  , "INC C");
		instructions[ 0xd].Set( 0xd,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::C,      RTD::None  , "DEC C");
		instructions[ 0xe].Set( 0xe,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::Imm8  , "LD C,d8");
		instructions[ 0xf].Set( 0xf,  0x0, 1,  4,  0, RFB::Reset,       RFB::Reset,       RFB::Reset,       RFB::PerFunction , RTD::None,   RTD::None  , "RRCA");
		instructions[0x10].Set(0x10,  0x0, 2,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::Zero,   RTD::None  , "STOP 0");
		instructions[0x11].Set(0x11,  0x0, 3, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::DE,     RTD::Imm16 , "LD DE,d16");
		instructions[0x12].Set(0x12,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrDE, RTD::A     , "LD (DE),A");
		instructions[0x13].Set(0x13,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::DE,     RTD::None  , "INC DE");
		instructions[0x14].Set(0x14,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::D,      RTD::None  , "INC D");
		instructions[0x15].Set(0x15,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::D,      RTD::None  , "DEC D");
		instructions[0x16].Set(0x16,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::Imm8  , "LD D,d8");
		instructions[0x17].Set(0x17,  0x0, 1,  4,  0, RFB::Reset,       RFB::Reset,       RFB::Reset,       RFB::PerFunction , RTD::None,   RTD::None  , "RLA");
		instructions[0x18].Set(0x18,  0x0, 2, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::SImm8,  RTD::None  , "JR r8");
		instructions[0x19].Set(0x19,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::HL,     RTD::DE    , "ADD HL,DE");
		instructions[0x1a].Set(0x1a,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::AddrDE, "LD A,(DE)");
		instructions[0x1b].Set(0x1b,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::DE,     RTD::None  , "DEC DE");
		instructions[0x1c].Set(0x1c,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::E,      RTD::None  , "INC E");
		instructions[0x1d].Set(0x1d,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::E,      RTD::None  , "DEC E");
		instructions[0x1e].Set(0x1e,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::Imm8  , "LD E,d8");
		instructions[0x1f].Set(0x1f,  0x0, 1,  4,  0, RFB::Reset,       RFB::Reset,       RFB::Reset,       RFB::PerFunction , RTD::None,   RTD::None  , "RRA");
		instructions[0x20].Set(0x20,  0x0, 2, 12,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNZ, RTD::SImm8 , "JR NZ,r8");
		instructions[0x21].Set(0x21,  0x0, 3, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::HL,     RTD::Imm16 , "LD HL,d16");
		instructions[0x22].Set(0x22,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::A     , "LDI (HL),A");
		instructions[0x23].Set(0x23,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::HL,     RTD::None  , "INC HL");
		instructions[0x24].Set(0x24,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::H,      RTD::None  , "INC H");
		instructions[0x25].Set(0x25,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::H,      RTD::None  , "DEC H");
		instructions[0x26].Set(0x26,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::Imm8  , "LD H,d8");
		instructions[0x27].Set(0x27,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Unmodified,  RFB::Reset,       RFB::PerFunction , RTD::None,   RTD::None  , "DAA");
		instructions[0x28].Set(0x28,  0x0, 2, 12,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagZ,  RTD::SImm8 , "JR Z,r8");
		instructions[0x29].Set(0x29,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::HL,     RTD::HL    , "ADD HL,HL");
		instructions[0x2a].Set(0x2a,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::AddrHL, "LDI A,(HL)");
		instructions[0x2b].Set(0x2b,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::HL,     RTD::None  , "DEC HL");
		instructions[0x2c].Set(0x2c,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::L,      RTD::None  , "INC L");
		instructions[0x2d].Set(0x2d,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::L,      RTD::None  , "DEC L");
		instructions[0x2e].Set(0x2e,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::Imm8  , "LD L,d8");
		instructions[0x2f].Set(0x2f,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Set,         RFB::Set,         RFB::Unmodified  , RTD::None,   RTD::None  , "CPL");
		instructions[0x30].Set(0x30,  0x0, 2, 12,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNC, RTD::SImm8 , "JR NC,r8");
		instructions[0x31].Set(0x31,  0x0, 3, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::SP,     RTD::Imm16 , "LD SP,d16");
		instructions[0x32].Set(0x32,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::A     , "LDD (HL),A");
		instructions[0x33].Set(0x33,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::SP,     RTD::None  , "INC SP");
		instructions[0x34].Set(0x34,  0x0, 1, 12,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::AddrHL, RTD::None  , "INC (HL)");
		instructions[0x35].Set(0x35,  0x0, 1, 12,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::AddrHL, RTD::None  , "DEC (HL)");
		instructions[0x36].Set(0x36,  0x0, 2, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::Imm8  , "LD (HL),d8");
		instructions[0x37].Set(0x37,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Reset,       RFB::Reset,       RFB::Set         , RTD::None,   RTD::None  , "SCF");
		instructions[0x38].Set(0x38,  0x0, 2, 12,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagC,  RTD::SImm8 , "JR CF,r8");
		instructions[0x39].Set(0x39,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::HL,     RTD::SP    , "ADD HL,SP");
		instructions[0x3a].Set(0x3a,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::AddrHL, "LDD A,(HL)");
		instructions[0x3b].Set(0x3b,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::SP,     RTD::None  , "DEC SP");
		instructions[0x3c].Set(0x3c,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::Unmodified  , RTD::A,      RTD::None  , "INC A");
		instructions[0x3d].Set(0x3d,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::Unmodified  , RTD::A,      RTD::None  , "DEC A");
		instructions[0x3e].Set(0x3e,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::Imm8  , "LD A,d8");
		instructions[0x3f].Set(0x3f,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Reset,       RFB::Reset,       RFB::PerFunction , RTD::None,   RTD::None  , "CCF");
		instructions[0x40].Set(0x40,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::B     , "LD B,B");
		instructions[0x41].Set(0x41,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::C     , "LD B,C");
		instructions[0x42].Set(0x42,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::D     , "LD B,D");
		instructions[0x43].Set(0x43,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::E     , "LD B,E");
		instructions[0x44].Set(0x44,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::H     , "LD B,H");
		instructions[0x45].Set(0x45,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::L     , "LD B,L");
		instructions[0x46].Set(0x46,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::AddrHL, "LD B,(HL)");
		instructions[0x47].Set(0x47,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::B,      RTD::A     , "LD B,A");
		instructions[0x48].Set(0x48,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::B     , "LD C,B");
		instructions[0x49].Set(0x49,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::C     , "LD C,C");
		instructions[0x4a].Set(0x4a,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::D     , "LD C,D");
		instructions[0x4b].Set(0x4b,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::E     , "LD C,E");
		instructions[0x4c].Set(0x4c,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::H     , "LD C,H");
		instructions[0x4d].Set(0x4d,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::L     , "LD C,L");
		instructions[0x4e].Set(0x4e,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::AddrHL, "LD C,(HL)");
		instructions[0x4f].Set(0x4f,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::C,      RTD::A     , "LD C,A");
		instructions[0x50].Set(0x50,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::B     , "LD D,B");
		instructions[0x51].Set(0x51,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::C     , "LD D,C");
		instructions[0x52].Set(0x52,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::D     , "LD D,D");
		instructions[0x53].Set(0x53,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::E     , "LD D,E");
		instructions[0x54].Set(0x54,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::H     , "LD D,H");
		instructions[0x55].Set(0x55,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::L     , "LD D,L");
		instructions[0x56].Set(0x56,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::AddrHL, "LD D,(HL)");
		instructions[0x57].Set(0x57,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::D,      RTD::A     , "LD D,A");
		instructions[0x58].Set(0x58,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::B     , "LD E,B");
		instructions[0x59].Set(0x59,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::C     , "LD E,C");
		instructions[0x5a].Set(0x5a,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::D     , "LD E,D");
		instructions[0x5b].Set(0x5b,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::E     , "LD E,E");
		instructions[0x5c].Set(0x5c,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::H     , "LD E,H");
		instructions[0x5d].Set(0x5d,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::L     , "LD E,L");
		instructions[0x5e].Set(0x5e,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::AddrHL, "LD E,(HL)");
		instructions[0x5f].Set(0x5f,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::E,      RTD::A     , "LD E,A");
		instructions[0x60].Set(0x60,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::B     , "LD H,B");
		instructions[0x61].Set(0x61,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::C     , "LD H,C");
		instructions[0x62].Set(0x62,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::D     , "LD H,D");
		instructions[0x63].Set(0x63,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::E     , "LD H,E");
		instructions[0x64].Set(0x64,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::H     , "LD H,H");
		instructions[0x65].Set(0x65,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::L     , "LD H,L");
		instructions[0x66].Set(0x66,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::AddrHL, "LD H,(HL)");
		instructions[0x67].Set(0x67,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::H,      RTD::A     , "LD H,A");
		instructions[0x68].Set(0x68,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::B     , "LD L,B");
		instructions[0x69].Set(0x69,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::C     , "LD L,C");
		instructions[0x6a].Set(0x6a,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::D     , "LD L,D");
		instructions[0x6b].Set(0x6b,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::E     , "LD L,E");
		instructions[0x6c].Set(0x6c,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::H     , "LD L,H");
		instructions[0x6d].Set(0x6d,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::L     , "LD L,L");
		instructions[0x6e].Set(0x6e,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::AddrHL, "LD L,(HL)");
		instructions[0x6f].Set(0x6f,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::L,      RTD::A     , "LD L,A");
		instructions[0x70].Set(0x70,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::B     , "LD (HL),B");
		instructions[0x71].Set(0x71,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::C     , "LD (HL),C");
		instructions[0x72].Set(0x72,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::D     , "LD (HL),D");
		instructions[0x73].Set(0x73,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::E     , "LD (HL),E");
		instructions[0x74].Set(0x74,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::H     , "LD (HL),H");
		instructions[0x75].Set(0x75,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::L     , "LD (HL),L");
		instructions[0x76].Set(0x76,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "HALT");
		instructions[0x77].Set(0x77,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::A     , "LD (HL),A");
		instructions[0x78].Set(0x78,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::B     , "LD A,B");
		instructions[0x79].Set(0x79,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::C     , "LD A,C");
		instructions[0x7a].Set(0x7a,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::D     , "LD A,D");
		instructions[0x7b].Set(0x7b,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::E     , "LD A,E");
		instructions[0x7c].Set(0x7c,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::H     , "LD A,H");
		instructions[0x7d].Set(0x7d,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::L     , "LD A,L");
		instructions[0x7e].Set(0x7e,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::AddrHL, "LD A,(HL)");
		instructions[0x7f].Set(0x7f,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::A     , "LD A,A");
		instructions[0x80].Set(0x80,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::B     , "ADD A,B");
		instructions[0x81].Set(0x81,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::C     , "ADD A,C");
		instructions[0x82].Set(0x82,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::D     , "ADD A,D");
		instructions[0x83].Set(0x83,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::E     , "ADD A,E");
		instructions[0x84].Set(0x84,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::H     , "ADD A,H");
		instructions[0x85].Set(0x85,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::L     , "ADD A,L");
		instructions[0x86].Set(0x86,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::AddrHL, "ADD A,(HL)");
		instructions[0x87].Set(0x87,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::A     , "ADD A,A");
		instructions[0x88].Set(0x88,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::B     , "ADC A,B");
		instructions[0x89].Set(0x89,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::C     , "ADC A,C");
		instructions[0x8a].Set(0x8a,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::D     , "ADC A,D");
		instructions[0x8b].Set(0x8b,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::E     , "ADC A,E");
		instructions[0x8c].Set(0x8c,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::H     , "ADC A,H");
		instructions[0x8d].Set(0x8d,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::L     , "ADC A,L");
		instructions[0x8e].Set(0x8e,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::AddrHL, "ADC A,(HL)");
		instructions[0x8f].Set(0x8f,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::A     , "ADC A,A");
		instructions[0x90].Set(0x90,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::B,      RTD::None  , "SUB B");
		instructions[0x91].Set(0x91,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::C,      RTD::None  , "SUB C");
		instructions[0x92].Set(0x92,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::D,      RTD::None  , "SUB D");
		instructions[0x93].Set(0x93,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::E,      RTD::None  , "SUB E");
		instructions[0x94].Set(0x94,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::H,      RTD::None  , "SUB H");
		instructions[0x95].Set(0x95,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::L,      RTD::None  , "SUB L");
		instructions[0x96].Set(0x96,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::AddrHL, RTD::None  , "SUB (HL)");
		instructions[0x97].Set(0x97,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::None  , "SUB A");
		instructions[0x98].Set(0x98,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::B     , "SBC A,B");
		instructions[0x99].Set(0x99,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::C     , "SBC A,C");
		instructions[0x9a].Set(0x9a,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::D     , "SBC A,D");
		instructions[0x9b].Set(0x9b,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::E     , "SBC A,E");
		instructions[0x9c].Set(0x9c,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::H     , "SBC A,H");
		instructions[0x9d].Set(0x9d,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::L     , "SBC A,L");
		instructions[0x9e].Set(0x9e,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::AddrHL, "SBC A,(HL)");
		instructions[0x9f].Set(0x9f,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::A     , "SBC A,A");
		instructions[0xa0].Set(0xa0,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::B,      RTD::None  , "AND B");
		instructions[0xa1].Set(0xa1,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::C,      RTD::None  , "AND C");
		instructions[0xa2].Set(0xa2,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::D,      RTD::None  , "AND D");
		instructions[0xa3].Set(0xa3,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::E,      RTD::None  , "AND E");
		instructions[0xa4].Set(0xa4,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::H,      RTD::None  , "AND H");
		instructions[0xa5].Set(0xa5,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::L,      RTD::None  , "AND L");
		instructions[0xa6].Set(0xa6,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::AddrHL, RTD::None  , "AND (HL)");
		instructions[0xa7].Set(0xa7,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::A,      RTD::None  , "AND A");
		instructions[0xa8].Set(0xa8,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::B,      RTD::None  , "XOR B");
		instructions[0xa9].Set(0xa9,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::C,      RTD::None  , "XOR C");
		instructions[0xaa].Set(0xaa,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::D,      RTD::None  , "XOR D");
		instructions[0xab].Set(0xab,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::E,      RTD::None  , "XOR E");
		instructions[0xac].Set(0xac,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::H,      RTD::None  , "XOR H");
		instructions[0xad].Set(0xad,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::L,      RTD::None  , "XOR L");
		instructions[0xae].Set(0xae,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::AddrHL, RTD::None  , "XOR (HL)");
		instructions[0xaf].Set(0xaf,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::A,      RTD::None  , "XOR A");
		instructions[0xb0].Set(0xb0,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::B,      RTD::None  , "OR B");
		instructions[0xb1].Set(0xb1,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::C,      RTD::None  , "OR C");
		instructions[0xb2].Set(0xb2,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::D,      RTD::None  , "OR D");
		instructions[0xb3].Set(0xb3,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::E,      RTD::None  , "OR E");
		instructions[0xb4].Set(0xb4,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::H,      RTD::None  , "OR H");
		instructions[0xb5].Set(0xb5,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::L,      RTD::None  , "OR L");
		instructions[0xb6].Set(0xb6,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::AddrHL, RTD::None  , "OR (HL)");
		instructions[0xb7].Set(0xb7,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::A,      RTD::None  , "OR A");
		instructions[0xb8].Set(0xb8,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::B,      RTD::None  , "CP B");
		instructions[0xb9].Set(0xb9,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::C,      RTD::None  , "CP C");
		instructions[0xba].Set(0xba,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::D,      RTD::None  , "CP D");
		instructions[0xbb].Set(0xbb,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::E,      RTD::None  , "CP E");
		instructions[0xbc].Set(0xbc,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::H,      RTD::None  , "CP H");
		instructions[0xbd].Set(0xbd,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::L,      RTD::None  , "CP L");
		instructions[0xbe].Set(0xbe,  0x0, 1,  8,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::AddrHL, RTD::None  , "CP (HL)");
		instructions[0xbf].Set(0xbf,  0x0, 1,  4,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::None  , "CP A");
		instructions[0xc0].Set(0xc0,  0x0, 1, 20,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNZ, RTD::None  , "RET NZ");
		instructions[0xc1].Set(0xc1,  0x0, 1, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::BC,     RTD::None  , "POP BC");
		instructions[0xc2].Set(0xc2,  0x0, 3, 16, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNZ, RTD::Addr16, "JP NZ,a16");
		instructions[0xc3].Set(0xc3,  0x0, 3, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::Addr16, RTD::None  , "JP a16");
		instructions[0xc4].Set(0xc4,  0x0, 3, 24, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNZ, RTD::Addr16, "CALL NZ,a16");
		instructions[0xc5].Set(0xc5,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::BC,     RTD::None  , "PUSH BC");
		instructions[0xc6].Set(0xc6,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::Imm8  , "ADD A,d8");
		instructions[0xc7].Set(0xc7,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 00H");
		instructions[0xc8].Set(0xc8,  0x0, 1, 20,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagZ,  RTD::None  , "RET Z");
		instructions[0xc9].Set(0xc9,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RET");
		instructions[0xca].Set(0xca,  0x0, 3, 16, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagZ,  RTD::Addr16, "JP Z,a16");
		instructions[0xcb].Set(0xcb,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "PREFIX CB");
		instructions[0xcc].Set(0xcc,  0x0, 3, 24, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagZ,  RTD::Addr16, "CALL Z,a16");
		instructions[0xcd].Set(0xcd,  0x0, 3, 24,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::Addr16, RTD::None  , "CALL a16");
		instructions[0xce].Set(0xce,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::Imm8  , "ADC A,d8");
		instructions[0xcf].Set(0xcf,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 08H");
		instructions[0xd0].Set(0xd0,  0x0, 1, 20,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNC, RTD::None  , "RET NC");
		instructions[0xd1].Set(0xd1,  0x0, 1, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::DE,     RTD::None  , "POP DE");
		instructions[0xd2].Set(0xd2,  0x0, 3, 16, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNC, RTD::Addr16, "JP NC,a16");
		instructions[0xd3].Set(0xd3,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xd4].Set(0xd4,  0x0, 3, 24, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagNC, RTD::Addr16, "CALL NC,a16");
		instructions[0xd5].Set(0xd5,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::DE,     RTD::None  , "PUSH DE");
		instructions[0xd6].Set(0xd6,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::Imm8,   RTD::None  , "SUB d8");
		instructions[0xd7].Set(0xd7,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 10H");
		instructions[0xd8].Set(0xd8,  0x0, 1, 20,  8, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagC,  RTD::None  , "RET CF");
		instructions[0xd9].Set(0xd9,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RETI");
		instructions[0xda].Set(0xda,  0x0, 3, 16, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagC,  RTD::Addr16, "JP CF,a16");
		instructions[0xdb].Set(0xdb,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xdc].Set(0xdc,  0x0, 3, 24, 12, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::FlagC,  RTD::Addr16, "CALL CF,a16");
		instructions[0xdd].Set(0xdd,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xde].Set(0xde,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::A,      RTD::Imm8  , "SBC A,d8");
		instructions[0xdf].Set(0xdf,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 18H");
		instructions[0xe0].Set(0xe0,  0x0, 2, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::Addr8,  RTD::A     , "LDH a8,A");
		instructions[0xe1].Set(0xe1,  0x0, 1, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::HL,     RTD::None  , "POP HL");
		instructions[0xe2].Set(0xe2,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrC,  RTD::A     , "LD (C),A");
		instructions[0xe3].Set(0xe3,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xe4].Set(0xe4,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xe5].Set(0xe5,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::HL,     RTD::None  , "PUSH HL");
		instructions[0xe6].Set(0xe6,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::Set,         RFB::Reset       , RTD::Imm8,   RTD::None  , "AND d8");
		instructions[0xe7].Set(0xe7,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 20H");
		instructions[0xe8].Set(0xe8,  0x0, 2, 16,  0, RFB::Reset,       RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::SP,     RTD::SImm8 , "ADD SP,r8");
		instructions[0xe9].Set(0xe9,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AddrHL, RTD::None  , "JP (HL)");
		instructions[0xea].Set(0xea,  0x0, 3, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::Addr16, RTD::A     , "LD a16,A");
		instructions[0xeb].Set(0xeb,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xec].Set(0xec,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xed].Set(0xed,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xee].Set(0xee,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::Imm8,   RTD::None  , "XOR d8");
		instructions[0xef].Set(0xef,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 28H");
		instructions[0xf0].Set(0xf0,  0x0, 2, 12,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::Addr8 , "LDH A,a8");
		instructions[0xf1].Set(0xf1,  0x0, 1, 12,  0, RFB::PerFunction, RFB::PerFunction, RFB::PerFunction, RFB::PerFunction , RTD::AF,     RTD::None  , "POP AF");
		instructions[0xf2].Set(0xf2,  0x0, 2,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::AddrC , "LD A,(C)");
		instructions[0xf3].Set(0xf3,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "DI");
		instructions[0xf4].Set(0xf4,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xf5].Set(0xf5,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::AF,     RTD::None  , "PUSH AF");
		instructions[0xf6].Set(0xf6,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Reset,       RFB::Reset,       RFB::Reset       , RTD::Imm8,   RTD::None  , "OR d8");
		instructions[0xf7].Set(0xf7,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 30H");
		instructions[0xf8].Set(0xf8,  0x0, 2, 12,  0, RFB::Reset,       RFB::Reset,       RFB::PerFunction, RFB::PerFunction , RTD::SP,     RTD::SImm8 , "LD HL,SP+r8");
		instructions[0xf9].Set(0xf9,  0x0, 1,  8,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::SP,     RTD::HL    , "LD SP,HL");
		instructions[0xfa].Set(0xfa,  0x0, 3, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::A,      RTD::Addr16, "LD A,a16");
		instructions[0xfb].Set(0xfb,  0x0, 1,  4,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "EI");
		instructions[0xfc].Set(0xfc,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xfd].Set(0xfd,  0x0, 0,  0,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "XX");
		instructions[0xfe].Set(0xfe,  0x0, 2,  8,  0, RFB::PerFunction, RFB::Set,         RFB::PerFunction, RFB::PerFunction , RTD::Imm8,   RTD::None  , "CP d8");
		instructions[0xff].Set(0xff,  0x0, 1, 16,  0, RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified,  RFB::Unmodified  , RTD::None,   RTD::None  , "RST 38H");
	}
} // gbhw